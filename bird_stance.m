function [t,state,Ekin,Wtot] = bird_stance(x0, parms)% Parametersg=parms.g;mp=parms.mp;   % [kg] pigeon hip massmh=parms.mh;  % [kg] pigeon head massalpha=parms.alpha; % [rad] leg spreadL=parms.L; % [m] leg lengthhh=parms.hh; % [m] head height relative to groundstep_length=parms.step_length; % [m] step lengthspeed=parms.speed; % [m/s] desired walking speedstep_time=parms.step_time; % [s] desired step durationI_o=mh*L^2; % [kg*m^2] moment of inertia of leg about base% state vector: x = [theta; thetadot]% these statements are necessary in order to set event handling:% ode45 will stop the integration when the event occursoptions = odeset('abstol',1e-8,'reltol',1e-8);% integrate using ode45 and the state-derivative function[t,state] = ode45(@fbird_stance, [0 step_time], x0, options);% check for energy conservation[Ekin,Wtot] = energy_bird(state);% end of bird_stance; local functions follow%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function stated = fbird_stance(t,state)% state-derivative function for bird stance phase% the model consists of a point mass pelvis on a leg, in a rimlesswheel% setting. A point mass head is connected to the pelvis via a massless blob% (neck). In this function the head is constrained to zero acceleration.phi = state(1); % leg angle [rad]phid = state(2); % [rad/s]xh = state(3); % [m] x coordinate of pigeon head wrt base of stance legxhd = state(4); % [m/s]xp=L*cos(phi); % [m] x coordinate of pelves% pure moment of neck on pelvis (to satisfy massless neck). M_np=(xp-xh)*-mh*g; % moment of force of neck on pelvis about base of stance leg.M_Fnp=xp*mh*g;% moment of gravitational force on pelvis about base of stance leg.M_Fgp=xp*mp*g;% impulse momentum equation about base of stance leg:phidd=(M_np + M_Fnp + M_Fgp)/I_o;% Head motion. In this case the derivative is zero such that the head is% stationary...stated = [phid; phidd; xhd; 0];end % fbird_stance%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [Ekin,Wtot] = energy_bird(state)% returns the energy of the system at a given state% state can also be given as an arrayphi = state(:,1); % leg angle [rad]phid = state(:,2); % [rad/s]xh = state(:,3); % [m] x coordinate of pigeon head wrt base of stance legxhd = state(:,4); % [m/s]xp=L*cos(phi); % [m] x coordinate of pelvesyp = L*sin(phi); % [m] y coordiate of pelvis;% pure moment of neck on pelvis (to satisfy massless neck). M_np=(xp-xh)*-mh*g; % kinetic energy of legEkin = 0.5*I_o*phid.^2; %[J]Ekin = Ekin-Ekin(1); % [J] change in kinetic energy% mechanical work done on legW_forces = cumtrapz(yp,ones(size(yp))*(mp+mh)*g); % [J] work done by gravityW_moments= cumtrapz(phi,M_np); % [J] work done by pure momentWtot = W_forces+W_moments; % [J] total work done on legend % energyrwfunction [M] = cross2d(r,F)% computes cross product of two 2D vectorsM=r(1)*F(2)-r(2)*F(1);endend % outer function